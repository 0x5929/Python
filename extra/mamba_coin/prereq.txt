			TITLE:
				MAMBACOIN WITH PYTHON			
			
			BACKGROUND:
					CRYPTOCURRENCY USING BLOCKCHAIN TECHNOLOGY

			
			PROBLEM DEFINITION:
					NEED A WAY TO ADD OTHER NODES, SYNC EFFECTIVELY, AND IMPLEMENT THE TECHNOLGIES THAT 
					CONTAINS THE REST OF THE CRYPTO STANDARD FEATURES MENTIONED IN THE BITCOIN WHITEPAPER
					SUCH AS MINING NEW COINS USING PROOF OF WORK, AND SYNCING WITH OTHER NODES ON THE SAME NETWORK


			SOLUTION REQUIREMENTS:
					- WELL DEFINED BLOCK STRUCTURE, WITH GENESIS BLOCK CREATION
					
					SERVER NEEDS TO HAVE THIS AVAILABLE OPERATIONS 
					- RETRIEVE BLOCKCHAIN/NODES/TRANSACTIONS FROM SERVERS
					- MINE BLOCKS (WITH SIMPLE PROOF OF WORK)
					- ADDING URLS OF OTHER NODES ON NETWORK
					- HAVING A CONSENSUS OF ALL CHAINS/NODES/TRANSACTIONS

			ARCHITECTURE:
				SOFTWARE REQUIREMENTS:
					- FLASK --> HTTP SERVER 
					- REQUESTS --> HTTP REQUESTS
					- JSON --> JSON OPERATIOHS
					- HASH --> HASHER
					- DATETIME --> TIME OPERATIONS

				MAJOR CLASSES:
					BLOCK CLASS: RESPONSIBLE FOR BLOCK STRUCTURE
					HELPER CLASS: RESPONSIBLE FOR BLOCK, AND SERVER OPERATIONS
					SERVER CLASS: RESPONSIBLE FOR SETTING UP SERVER AND RUNNING IT WITH DESIRED CONFIGS

				INTERACTIONS BETWEEN CLASSES: 
					THE SERVER CLASS WILL UTITLIZE THE HELPER TO WORK WITH BLOCK CLASS
				
				MORE DETAILED DESIGN AND CLASS DIAGRAMS CAN ALSO BE DRAWN OUT
		
				DIRECTORY STRUCTURE:
					- __init__.py
					- prereq.txt
					- server.py
					- tests/
						- test.py
					- resources/
						- block.py
						- helper.py

					
